variables:
  system.debug: 'false'
  MOBILECENTER_OUTPUT_DIRECTORY: $(Build.ArtifactStagingDirectory)/build
  MOBILECENTER_BRANCH: master
  MOBILECENTER_BUILD_ID: $(Build.BuildNumber)
  MOBILECENTER_SOURCE_DIRECTORY: $(Build.Repository.LocalPath)
  MOBILECENTER_TRIGGER: continuous
  APPCENTER_OUTPUT_DIRECTORY: $(Build.ArtifactStagingDirectory)/build
  APPCENTER_BRANCH: master
  APPCENTER_BUILD_ID: $(Build.BuildNumber)
  APPCENTER_SOURCE_DIRECTORY: $(Build.Repository.LocalPath)
  APPCENTER_TRIGGER: continuous
  buildScripts.toolset: >-
    {"app":{"postBuild":"app/appcenter-post-build.sh","postClone":"app/appcenter-post-clone.sh","preBuild":"app/appcenter-pre-build.sh"}}
  moduleName: app
  buildVariant: release
  isRoot: 'false'
  runTests: 'false'
  runLint: 'false'
  keystoreEncoded: null
  automaticSigning: 'true'
  buildBundle: 'true'
  MOBILECENTER_ANDROID_MODULE: app
  MOBILECENTER_ANDROID_VARIANT: release
  APPCENTER_ANDROID_MODULE: app
  APPCENTER_ANDROID_VARIANT: release
  SONOMA_API_SERVER: 'https://api.appcenter.ms'
  SONOMA_API_VERSION: v0.1
  VSMobileCenterUpload.ContinueIfSymbolsNotFound: 'true'
  sonoma.tags: 'continuous,android,signed,android-app-bundle,testcloud,distribution'
# Agent Queue 'Azure Pipelines' was used with unrecognized Agent Specification, vmImage property must be specified to determine image - https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops&tabs=yaml#software
name: $(BuildID)
jobs:
- job: Phase_1
  displayName: Build
  timeoutInMinutes: 45
  cancelTimeoutInMinutes: 0
  pool:
    name: Azure Pipelines
  steps:
  - checkout: self
    clean: true
    submodules: recursive
    lfs: true
  - task: PowerShell@2
    displayName: Install build scripts
    continueOnError: True
    inputs:
      targetType: inline
      scriptName: ''
      script: >-
        Set-Location -Path '$(Agent.HomeDirectory)'

        Invoke-WebRequest -Uri 'https://appcenterbuildassets.azureedge.net/buildscripts/appcenter-build-assets-latest.zip' -OutFile 'appcenter-build-assets-latest.zip'

        if (Test-Path ./scripts) { Remove-Item -Path ./scripts -Force -Recurse }

        New-Item -ItemType directory -Path 'scripts' | Out-Null

        unzip -q -d 'scripts' 'appcenter-build-assets-latest.zip'

        Invoke-Expression 'bash ./scripts/init.sh'
      failOnStderr: true
  - task: ShellScript@2
    displayName: Tag build
    inputs:
      scriptPath: $(Agent.HomeDirectory)/scripts/emit-tags.sh
      args: $(sonoma.tags)
  - task: ShellScript@2
    displayName: Post Clone Script
    inputs:
      scriptPath: app/appcenter-post-clone.sh
  - task: ShellScript@2
    displayName: Pre Build Script
    inputs:
      scriptPath: app/appcenter-pre-build.sh
  - task: Gradle@1
    displayName: Gradle Task
    inputs:
      tasks: 'clean :app:assembleRelease :app:bundleRelease '
      jdkArchitecture: x86
      publishJUnitResults: false
      sqAnalysisBreakBuildIfQualityGateFailed: false
  - task: ShellScript@2
    name: appcenter_android_postprocess_output
    displayName: Android Postprocess
    inputs:
      scriptPath: $(Agent.HomeDirectory)/scripts/android-postprocess.sh
      args: $(build.sourcesdirectory)/app/build/outputs/apk
  - task: CopyFiles@2
    displayName: Copy build files to staging
    inputs:
      SourceFolder: $(build.sourcesdirectory)/app/build/outputs
      Contents: apk/**/*.apk
      TargetFolder: $(build.artifactstagingdirectory)/build
      OverWrite: true
      flattenFolders: true
  - task: CopyFiles@2
    displayName: Copy bundle files to staging
    inputs:
      SourceFolder: $(build.sourcesdirectory)/app/build/outputs
      Contents: bundle/**/*.aab
      TargetFolder: $(build.artifactstagingdirectory)/bundle
      OverWrite: true
      flattenFolders: true
  - task: CopyFiles@2
    displayName: Copy mapping files to staging
    inputs:
      SourceFolder: $(build.sourcesdirectory)/app/build/outputs
      Contents: mapping/**/mapping.txt
      TargetFolder: $(build.artifactstagingdirectory)/mapping
      OverWrite: true
      flattenFolders: true
  - task: ShellScript@2
    displayName: Post Build Script
    condition: succeededOrFailed()
    inputs:
      scriptPath: app/appcenter-post-build.sh
  - task: PublishBuildArtifacts@1
    displayName: Publish build
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)/build
      ArtifactName: build
  - task: PublishBuildArtifacts@1
    displayName: Publish bundle
    continueOnError: True
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)/bundle
      ArtifactName: bundle
  - task: PublishBuildArtifacts@1
    displayName: Publish mapping
    condition: and(succeeded(), startsWith(variables['appcenter_android_postprocess_output.mapping'], true))
    continueOnError: True
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)/mapping
      ArtifactName: mapping
  - task: ShellScript@2
    displayName: Tag build
    inputs:
      scriptPath: $(Agent.HomeDirectory)/scripts/emit-tags.sh
      args: $(sonoma.tags)
  - task: CmdLine@1
    displayName: Generate UITest tests
    condition: and(succeeded(), ne(variables['Build.Reason'], 'pullRequest'))
    inputs:
      filename: appcenter
      arguments: test generate uitest --platform "android" --output-path "$(Build.ArtifactStagingDirectory)/GeneratedTest"
  - task: NuGetInstaller@0
    displayName: Restore Nuget
    condition: and(succeeded(), ne(variables['Build.Reason'], 'pullRequest'))
    inputs:
      solution: $(Build.ArtifactStagingDirectory)/GeneratedTest/*.sln
  - task: MSBuild@1
    displayName: Build UITest project
    condition: and(succeeded(), ne(variables['Build.Reason'], 'pullRequest'))
    inputs:
      solution: $(Build.ArtifactStagingDirectory)/GeneratedTest/*.sln
      configuration: Release
      logProjectEvents: true
      createLogFile: true
      msbuildVersion: 14.0
  - task: AppCenterTest@1
    displayName: Run generated tests on real devices
    condition: and(succeeded(), ne(variables['Build.Reason'], 'pullRequest'))
    inputs:
      app: $(build.artifactstagingdirectory)/build/**/*.apk
      artifactsDir: $(Build.ArtifactStagingDirectory)/Artifacts
      framework: uitest
      uitestBuildDir: $(Build.ArtifactStagingDirectory)/GeneratedTest/AppCenter.UITest.Android/bin/Release
      uitestStoreFile: ''
      serverEndpoint: AppCenter
      appSlug: first-light/appcenter-sample
      devices: any_top_1_device
      series: launch-tests
      runOpts: ' -p msft/test-run-origin=Build/Launch'
      debug: true
  - task: AppCenterDistribute@3
    displayName: Create distribution
    condition: and(succeeded(), ne(variables['Build.Reason'], 'pullRequest'))
    inputs:
      serverEndpoint: AppCenter
      appSlug: first-light/appcenter-sample
      destinationGroupIds: 00000000-0000-0000-0000-000000000000
      isSilent: False
      releaseNotesInput: $(lastCommitMessage)
      app: $(build.artifactstagingdirectory)/build/**/*.apk
      symbolsType: Android
      mappingTxtPath: $(build.artifactstagingdirectory)/mapping/**/mapping.txt
      nativeLibrariesPath: $(build.sourcesdirectory)/**/*.so
...
